name: Prepare Shared GitHub Actions for Release

on:
  push:
  workflow_dispatch:
    inputs:
      bump:
        description: "Bump"
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

env:
  CARGO_TERM_COLOR: always

jobs:
  prepare:
    name: Prepare Release
    runs-on: pub-hk-ubuntu-22.04-small
    steps:
      - name: Get token for GH application (Linguist)
        uses: heroku/use-app-token-action@main
        id: generate-token
        with:
          app_id: ${{ inputs.app_id }}
          private_key: ${{ secrets.app_private_key }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate-token.outputs.app_token }}

      - name: Update Rust toolchain
        run: rustup update

      - name: Install cargo-bump
        run: cargo install cargo-bump

      - name: Bump version
        run: cargo bump ${{ inputs.bump }}

      - name: Update lockfile
        run: cargo check

      - name: Get package metadata
        id: metadata
        shell: bash
        run: echo "version=$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[-1].version')" >> $GITHUB_OUTPUT

      - name: Update tags for internal actions
        run: find .github -type f -name "*.yml" -exec sed -i -E 's|^(\s*uses:\s*heroku/languages-github-actions/\.github/.*)@.*$|\1@v${{ steps.metadata.outputs.version }}|g' {} +

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: Install Node dependencies
        run: npm ci

      - name: Rebuild bootstrap script
        run: npm run build

      - name: Create pull request
        id: pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.generate-token.outputs.app_token }}
          title: Prepare release v${{ steps.prepare.outputs.to_version }}
          commit-message: Prepare release v${{ steps.prepare.outputs.to_version }}
          branch: prepare/v${{ steps.prepare.outputs.to_version }}
          body: ${{ steps.generate-changelog.outputs.changelog }}
          labels: "automation"

#      - name: Configure pull request
#        if: steps.pr.outputs.pull-request-operation == 'created'
#        run: gh pr merge --auto --squash "${{ steps.pr.outputs.pull-request-number }}"
#        env:
#          GH_TOKEN: ${{ steps.generate-token.outputs.app_token }}
