on:
  workflow_call:
    inputs:
      buildpack_id:
        required: true
        type: string
        description: The id of the buildpack to package
      buildpack_artifact_prefix:
        required: true
        type: string
        description: The prefix name to use for any generated buildpack artifacts
      buildpack_version:
        required: true
        type: string
        description: The version of the buildpack to package
      docker_repository:
        required: true
        type: string
        description: The docker repository to publish the buildpack to
    secrets:
      docker_hub_user:
        required: true
        description: The username to login to Docker Hub with
      docker_hub_token:
        required: true
        description: The token to login to Docker Hub with

permissions:
  contents: read

jobs:
  release-publish-docker:
    name: Publish â†’ Docker
    runs-on: ubuntu-latest
    steps:
      - name: Restore buildpack release artifacts
        id: artifacts
        uses: heroku/languages-github-actions/.github/actions/restore-buildpack-release@main
        with:
          buildpack_artifact_prefix: ${{ inputs.buildpack_artifact_prefix }}

      - name: Load Docker images into the Docker daemon
        run: zstd -dc --long=31 ${{ steps.artifacts.outputs.docker_image }} | docker load

      - name: Login to Docker Hub
        uses: docker/login-action@v2.2.0
        with:
          registry: docker.io
          username: ${{ secrets.docker_hub_user }}
          password: ${{ secrets.docker_hub_token }}

      - name: Check if version is already on Docker Hub
        id: check
        run: echo "published_to_docker=$(docker manifest inspect "${{ inputs.docker_repository }}:${{ inputs.buildpack_version }}" &> /dev/null && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
      
      - name: Tag and publish buildpack
        if: steps.check.outputs.published_to_docker == 'false'
        run: |
          docker tag ${{ inputs.buildpack_id }} ${{ inputs.docker_repository }}:${{ inputs.buildpack_version }}
          docker push ${{ inputs.docker_repository }}:${{ inputs.buildpack_version }}
