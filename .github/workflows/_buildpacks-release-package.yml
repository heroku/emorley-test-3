on:
  workflow_call:
    inputs:
      buildpack_id:
        required: true
        type: string
        description: The id of the buildpack to package
      buildpack_version:
        required: true
        type: string
        description: The version of the buildpack to package
      buildpack_dir:
        required: true
        type: string
        description: The directory of the buildpack to package
      buildpack_artifact_prefix:
        required: true
        type: string
        description: The prefix name to use for any generated buildpack artifacts

env:
  CARGO_TERM_COLOR: always

jobs:
  release-package:
    runs-on: ubuntu-latest
    name: Package
    steps:
      # Setup
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install musl-tools
        run: sudo apt-get install musl-tools --no-install-recommends

      - name: Update Rust toolchain
        run: rustup update

      - name: Install Rust linux-musl target
        run: rustup target add x86_64-unknown-linux-musl

      - name: Rust cache
        uses: Swatinem/rust-cache@v2.5.1

      - name: Install Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.3.0

      - name: Install libcnb-cargo
        run: cargo install libcnb-cargo

      # Package
      - name: Package buildpack
        id: libcnb-package
        working-directory: ${{ inputs.buildpack_dir }}
        run: echo "output_dir=$(cargo libcnb package --release)" >> $GITHUB_OUTPUT

      # Save release artifacts
      - name: Generate Changelog
        id: generate-changelog
        uses: heroku/languages-github-actions/.github/actions/generate-changelog@main
        with:
          version: ${{ inputs.buildpack_version }}

      - name: Save CNB File
        run: pack buildpack package ${{ inputs.buildpack_artifact_prefix }}.cnb --config ${{ steps.libcnb-package.outputs.output_dir }}/package.toml --format file -v

      - name: Create Docker Image
        run: pack buildpack package ${{ inputs.buildpack_id }} --config ${{ steps.libcnb-package.outputs.output_dir }}/package.toml -v

      - name: Save Docker Image
        run: docker save ${{ inputs.buildpack_id }} | zstd -T0 --long=31 -o ${{ inputs.buildpack_artifact_prefix }}.tar.zst

      - name: Store buildpack release artifacts
        uses: heroku/languages-github-actions/.github/actions/save-buildpack-release@main
        with:
          buildpack_artifact_prefix: ${{ inputs.buildpack_artifact_prefix }}
          changes: ${{ steps.generate-changelog.outputs.changelog }}
          cnb_file: ${{ inputs.buildpack_artifact_prefix }}.cnb
          docker_image: ${{ inputs.buildpack_artifact_prefix }}.tar.zst
